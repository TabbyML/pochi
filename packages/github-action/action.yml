name: "pochi GitHub Action"
description: "Run pochi AI assistant in GitHub Actions workflows"
branding:
  icon: "code"
  color: "blue"

inputs:
  model:
    description: "The AI model to use for pochi tasks"
    required: false

runs:
  using: "composite"
  steps:
    - name: Create initial comment
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        echo "ðŸš€ Creating initial comment..."
        echo "Repository: ${{ github.repository }}"
        echo "Event: ${{ github.event_name }}"
        
        RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        COMMENT_BODY="[Pochi is preparing...]($RUN_URL)"
        
        # Get the issue/PR number
        ISSUE_NUMBER="${{ github.event.issue.number || github.event.pull_request.number }}"
        echo "Issue/PR number: $ISSUE_NUMBER"
        
        COMMENT_RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments" \
          -d "{\"body\":\"$COMMENT_BODY\"}")
        
        # Extract comment ID
        if command -v jq >/dev/null 2>&1; then
          COMMENT_ID=$(echo "$COMMENT_RESPONSE" | jq -r '.id')
        else
          COMMENT_ID=$(echo "$COMMENT_RESPONSE" | grep -o '"id":[0-9]*' | head -1 | cut -d':' -f2)
        fi
        
        echo "Created comment ID: $COMMENT_ID"
        echo "POCHI_COMMENT_ID=$COMMENT_ID" >> $GITHUB_ENV

    - name: Install pochi CLI
      shell: bash
      run: |
        echo "Installing pochi CLI..."
        curl -fsSL https://app.getpochi.com/install.sh | bash
        echo "$HOME/.pochi/bin" >> $GITHUB_PATH

    - name: Install ripgrep
      shell: bash
      run: |
        echo "Installing ripgrep..."
        sudo apt-get update && sudo apt-get install -y ripgrep
        echo "Ripgrep installed at: $(which rg)"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install bun
      shell: bash
      run: npm install -g bun

    - name: Install dependencies
      shell: bash
      run: |
        cd ${GITHUB_ACTION_PATH}
        bun install

    - name: Run pochi GitHub Action
      shell: bash
      run: |
        if [ -n "${{ inputs.model }}" ]; then
          export POCHI_MODEL="${{ inputs.model }}"
        fi
        bun ${GITHUB_ACTION_PATH}/src/main.ts
      env:
        POCHI_COMMENT_ID: ${{ env.POCHI_COMMENT_ID }}
        GITHUB_TOKEN: ${{ github.token }}
